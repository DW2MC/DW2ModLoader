# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '22 16 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    env:
        DOTNET_NOLOGO: true
        DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
        submodules: true

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    - name: Fetch git tag metadata
      id: git-tag-metadata
      run: |
        echo Fetching tags...
        git fetch --force --update-shallow --depth 1 origin +refs/tags/*:refs/tags/* || echo No tags.
        echo ""
        git log --tags --simplify-by-decoration --pretty="format:%cs %d"
        echo ""
        echo Fetching since $(git log -1 --tags --simplify-by-decoration --pretty="format:%H") @ $(git log -1 --tags --simplify-by-decoration --pretty="format:%cs")
        git fetch --force --update-shallow --shallow-since=$(git log -1 --tags --simplify-by-decoration --pretty="format:%cs") || echo Failed shallow-exclude fetch.
        git fetch --force --update-shallow --shallow-exclude=$(git log -1 --tags --simplify-by-decoration --pretty="format:%H") || echo Failed shallow-since fetch.
        echo ""
        echo Version: $(git describe --always --tags --match v*)
        echo "::set-output name=version::$(git describe --always --tags --match v*)"
    - name: Check for .NET 6 preinstalled
      id: dotnet_check
      run: |
        compgen -G "~/.dotnet/sdk/6.0.*" \
        && echo "::set-output name=has_6_0::true" || \
        compgen -G "/usr/local/dotnet/sdk/6.0.*" \
        && echo "::set-output name=has_6_0::true" || \
        compgen -G "/usr/share/dotnet/sdk/6.0.*" \
        && echo "::set-output name=has_6_0::true" || true
    - uses: actions/setup-dotnet@v1.9.1
      if: ${{ steps.dotnet_check.outputs.has_6_0 != 'true' }}
      with:
        dotnet-version: 6.0.x
    - name: Authorise NuGet
      uses: StirlingLabs/GithubNugetAuthAction@main
      with:
        owner: Tyler-IN
        name: GitHub-Tyler-IN
    - name: DW2MC.snk
      run: echo "${{ secrets.DW2MC_SNK }}" | openssl base64 -d -A -out DW2MC.snk
    - name: Build
      run: dotnet build *.sln -c Release
    - name: Test
      run: dotnet test *.sln --no-build -c Release

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
