{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "https://dw2mc.github.io/DW2ModLoader/def-Race.json",
  "type": "object",
  "properties": {
    "RaceId": {
      "$ref": "#/$defs/IntegerExpression"
    },
    "ModelName": {
      "type": "string"
    },
    "$ModelName": {
      "$ref": "#/$defs/ExplicitExpression"
    },
    "BundleName": {
      "type": "string"
    },
    "$BundleName": {
      "$ref": "#/$defs/ExplicitExpression"
    },
    "DefaultRoomId": {
      "$ref": "#/$defs/IntegerExpression"
    },
    "FlagFilename": {
      "type": "string"
    },
    "$FlagFilename": {
      "$ref": "#/$defs/ExplicitExpression"
    },
    "FlagColor": {
      "$ref": "#/$defs/Color"
    },
    "AlternateFlagFilenames": {
      "$ref": "#/$defs/array"
    },
    "AlternateFlagColors": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Xenko.Core.Mathematics.Color"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/Xenko.Core.Mathematics.Color"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/Xenko.Core.Mathematics.Color"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "MainColor": {
      "$ref": "#/$defs/Color"
    },
    "SecondaryColor": {
      "$ref": "#/$defs/Color"
    },
    "ReproductionRate": {
      "$ref": "#/$defs/NumberExpression"
    },
    "AssimilationRate": {
      "$ref": "#/$defs/NumberExpression"
    },
    "MigrationFactor": {
      "$ref": "#/$defs/NumberExpression"
    },
    "Aggression": {
      "$ref": "#/$defs/NumberExpression"
    },
    "Caution": {
      "$ref": "#/$defs/NumberExpression"
    },
    "Dependability": {
      "$ref": "#/$defs/NumberExpression"
    },
    "IsPlayable": {
      "type": "boolean"
    },
    "PreventUseAsIndependent": {
      "type": "boolean"
    },
    "PreferredGovernmentIds": {
      "$ref": "#/$defs/array1"
    },
    "AllowableGovernmentIds": {
      "$ref": "#/$defs/array1"
    },
    "Bonuses": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/DistantWorlds.Types.Bonus"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/DistantWorlds.Types.Bonus"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/DistantWorlds.Types.Bonus"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "GrowthResources": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/DistantWorlds.Types.ResourceQuantity"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/DistantWorlds.Types.ResourceQuantity"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/DistantWorlds.Types.ResourceQuantity"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "ColonizationSuitabilityModifiers": {
      "$ref": "#/$defs/array2"
    },
    "MinimumSuitabilityForColonization": {
      "$ref": "#/$defs/array2"
    },
    "StartingResearchProjectIds": {
      "$ref": "#/$defs/array1"
    },
    "PreferredWeaponComponentIds": {
      "$ref": "#/$defs/array1"
    },
    "Biases": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/DistantWorlds.Types.RaceFactor"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/DistantWorlds.Types.RaceFactor"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/DistantWorlds.Types.RaceFactor"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "DesignNames": {
      "$ref": "#/$defs/array"
    },
    "VictoryConditions": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/DistantWorlds.Types.VictoryCondition"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/DistantWorlds.Types.VictoryCondition"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/DistantWorlds.Types.VictoryCondition"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "CharacterFirstNames": {
      "$ref": "#/$defs/array"
    },
    "CharacterLastNames": {
      "$ref": "#/$defs/array"
    },
    "StartingArtifactIds": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "SpaceportAmbientSoundEffectFilenames": {
      "$ref": "#/$defs/array"
    },
    "DefaultInfantryId": {
      "$ref": "#/$defs/IntegerExpression"
    },
    "Name": {
      "type": "string"
    },
    "$Name": {
      "$ref": "#/$defs/ExplicitExpression"
    },
    "Description": {
      "type": "string"
    },
    "$Description": {
      "$ref": "#/$defs/ExplicitExpression"
    },
    "ImageFilename": {
      "type": "string"
    },
    "$ImageFilename": {
      "$ref": "#/$defs/ExplicitExpression"
    },
    "$RaceId": {
      "$ref": "#/$defs/ExplicitExpression"
    },
    "$where": {
      "$ref": "#/$defs/ExplicitExpression"
    }
  },
  "$defs": {
    "Color": {
      "$ref": "#/$defs/Xenko.Core.Mathematics.Color"
    },
    "DistantWorlds.Types.Bonus": {
      "unevaluatedProperties": false,
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Type": {
          "enum": [
            "Undefined",
            "ResearchAll",
            "ResearchSensors",
            "ResearchWeapons",
            "ResearchHyperDrive",
            "ResearchReactor",
            "ResearchShields",
            "ResearchEngines",
            "ResearchArmor",
            "ResearchConstruction",
            "ResearchHighTech",
            "ResearchIndustrial",
            "ColonyIncome",
            "ColonyDevelopment",
            "ColonyHappiness",
            "ColonyPopulationGrowthRate",
            "ColonyDefense",
            "ColonyCorruptionReduction",
            "Scenery",
            "Diplomacy",
            "TradeIncome",
            "TourismIncome",
            "MiningRate",
            "WarWearinessReduction",
            "CharacterAppearanceTroopGeneral",
            "CharacterAppearanceFleetAdmiral",
            "CharacterAppearanceShipCaptain",
            "CharacterAppearanceIntelligenceAgent",
            "CharacterAppearanceScientist",
            "CharacterAppearanceColonyGovernor",
            "CharacterAppearanceAmbassador",
            "CharacterQualityLeader",
            "CharacterQualityPirate",
            "CharacterQualityTroopGeneral",
            "CharacterQualityFleetAdmiral",
            "CharacterQualityShipCaptain",
            "CharacterQualityIntelligenceAgent",
            "CharacterQualityScientist",
            "CharacterQualityColonyGovernor",
            "CharacterQualityAmbassador",
            "ConstructionSpeedAllShips",
            "ConstructionSpeedMilitary",
            "ConstructionSpeedCivilian",
            "ConstructionSpeedColonyShip",
            "ConstructionSpeedFacility",
            "ShipMaintenanceAll",
            "ShipMaintenanceMilitary",
            "ShipMaintenanceCivilian",
            "ShipMaintenanceBases",
            "TroopMaintenance",
            "TroopRecruitment",
            "TroopGroundAttack",
            "TroopGroundDefense",
            "TroopExperienceGain",
            "TroopRecoveryRate",
            "RecruitedTroopStrengthAll",
            "RecruitedTroopStrengthArmor",
            "RecruitedTroopStrengthInfantry",
            "RecruitedTroopStrengthSpecialForces",
            "RecruitedTroopStrengthPlanetaryDefense",
            "RecruitedTroopStrengthTitan",
            "Espionage",
            "CounterEspionage",
            "Sabotage",
            "Concealment",
            "PsyOps",
            "Assassination",
            "Targeting",
            "Countermeasures",
            "ShipManeuvering",
            "ShipEnergyUsage",
            "WeaponsDamage",
            "WeaponsRange",
            "ShieldRechargeRate",
            "DamageControl",
            "RepairRate",
            "HyperjumpSpeed",
            "ShipSpeed",
            "ArmorStrength",
            "BoardingAssault",
            "BoardingDefense",
            "RaidIncome",
            "ScanEvasion",
            "ScanFocusing",
            "PlanetaryFacilityMaintenance",
            "PlagueCuring",
            "PlagueContainment",
            "ResearchTroops"
          ]
        },
        "Amount": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "number"
            }
          ]
        },
        "AppliesTo": {
          "enum": [
            "Undefined",
            "Item",
            "Empire"
          ]
        },
        "FilterId": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "DiscoveryLevel": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "Description": {
          "type": "string"
        },
        "$Description": {
          "$ref": "./expression-language.json#"
        },
        "Sources": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "string",
                    "pattern": "^\\(delete\\)$"
                  }
                ]
              },
              "unevaluatedItems": false
            },
            {
              "allOf": [
                {
                  "$ref": "./expression-language.json#/$defs/list-selection"
                },
                {
                  "patternProperties": {
                    "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string",
                          "pattern": "^\\(delete\\)$"
                        }
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "unevaluatedProperties": false
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "$add": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        "SourceAmounts": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string",
                    "pattern": "^\\(delete\\)$"
                  }
                ]
              },
              "unevaluatedItems": false
            },
            {
              "allOf": [
                {
                  "$ref": "./expression-language.json#/$defs/list-selection"
                },
                {
                  "patternProperties": {
                    "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string",
                          "pattern": "^\\(delete\\)$"
                        }
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "unevaluatedProperties": false
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "$add": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        }
      }
    },
    "DistantWorlds.Types.OrbTypeFactor": {
      "unevaluatedProperties": false,
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "OrbTypeId": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "Factor": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "number"
            }
          ]
        }
      }
    },
    "DistantWorlds.Types.RaceFactor": {
      "unevaluatedProperties": false,
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "RaceId": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "Factor": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "number"
            }
          ]
        }
      }
    },
    "DistantWorlds.Types.ResourceQuantity": {
      "unevaluatedProperties": false,
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ResourceId": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "Amount": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "number"
            }
          ]
        }
      }
    },
    "DistantWorlds.Types.VictoryCondition": {
      "unevaluatedProperties": false,
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Type": {
          "enum": [
            "Undefined",
            "ControlHomeworld",
            "ControlPlanetTypePercentage",
            "ControlLargestColoniesByType",
            "ControlMostRuins",
            "PopulationHighest",
            "PopulationHappiest",
            "MostHomeworlds",
            "OwnLargestCapitalShip",
            "MostSpaceports",
            "MostMiningStations",
            "MostResortBases",
            "DestroyMostShips",
            "DestroyMostTroops",
            "DestroyMoreShipsThanLoseTimesFactor",
            "DestroyMoreEnemyTroopsThanLoseTimesFactor",
            "DestroyMostCreaturesByType",
            "LoseFewestShips",
            "LoseFewestTroops",
            "MostIntelligenceMissionsSucceed",
            "MostIntelligenceMissionsIntercepted",
            "ConquerMostEnemyColonies",
            "ExterminateOrEnslaveMostPopulation",
            "EnslavePopulationProportionEmpire",
            "BuildFacility",
            "KeepLeaderAlive",
            "MostScientists",
            "MostExperiencedAdmiral",
            "MostExperiencedGeneral",
            "ResearchLeastAdvanced",
            "ResearchMostAdvanced",
            "HighestTradeVolume",
            "MostTourismIncome",
            "MostTradeIncome",
            "HighestPrivateRevenue",
            "ControlRestrictedResourceSupply",
            "LargestMilitary",
            "LargestMilitaryNonAllied",
            "MostTroops",
            "MostTroopsNonAllied",
            "MutualDefensePactsFormedProportionAllEmpires",
            "FreeTradeAgreementsFormedProportionAllEmpires",
            "LeastWarsStarted",
            "LeastBrokenTreaties",
            "LeastTreaties",
            "MostTimeWarring",
            "LeastTimeWarring",
            "MostSubjugatedDominions",
            "OldestMutualDefensePact",
            "OldestFreeTradeAgreement",
            "ExploreMostSystems",
            "ExploreGalaxyPercentage",
            "MineMostResourcesLuxury",
            "MineMostResourcesConstruction",
            "MineMostResourcesFuel",
            "BuildMostMilitaryShips",
            "BuildMostCivilianShips",
            "BuildMostBases",
            "CaptureMostShips",
            "PirateEliminateMostPirateFactions",
            "PirateMostSuccessfulRaids",
            "MostNonAggressionPacts",
            "MostResearchFromSalvage",
            "MostResearchTreaties",
            "MostDefenseTreaties",
            "PossessArtifact",
            "WinWarsProportion"
          ]
        },
        "Proportion": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "number"
            }
          ]
        },
        "Amount": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "number"
            }
          ]
        },
        "Id": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        }
      }
    },
    "ExplicitExpression": {
      "$ref": "./expression-language.json#"
    },
    "IntegerExpression": {
      "oneOf": [
        {
          "$ref": "./expression-language.json#"
        },
        {
          "type": "integer"
        }
      ]
    },
    "NumberExpression": {
      "oneOf": [
        {
          "$ref": "./expression-language.json#"
        },
        {
          "type": "number"
        }
      ]
    },
    "Xenko.Core.Mathematics.Color": {
      "unevaluatedProperties": false,
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "R": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "G": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "B": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "A": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        },
        "Item": {
          "oneOf": [
            {
              "$ref": "./expression-language.json#"
            },
            {
              "type": "integer"
            }
          ]
        }
      }
    },
    "array": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "array1": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    },
    "array2": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/DistantWorlds.Types.OrbTypeFactor"
              },
              {
                "type": "string",
                "pattern": "^\\(delete\\)$"
              }
            ]
          },
          "unevaluatedItems": false
        },
        {
          "allOf": [
            {
              "$ref": "./expression-language.json#/$defs/list-selection"
            },
            {
              "patternProperties": {
                "^0|[1-9][0-9]*|\\([^\\)]\u002B\\)$": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/DistantWorlds.Types.OrbTypeFactor"
                    },
                    {
                      "type": "string",
                      "pattern": "^\\(delete\\)$"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "unevaluatedProperties": false
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "$add": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/DistantWorlds.Types.OrbTypeFactor"
              }
            }
          },
          "additionalProperties": false,
          "unevaluatedProperties": false
        }
      ]
    }
  }
}