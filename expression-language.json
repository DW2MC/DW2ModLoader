{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "https://dw2mc.github.io/DW2ModLoader/expression-language.json",
  "type": "string",
  "pattern": "^(?:(?\u003CNUMBER\u003E(?\u003C![\\w\\)])[-\u002B]?[0-9]*\\.?[0-9]\u002B(?:e[-\u002B]?[0-9]\u002B)?)|(?\u003CSTRING\u003E(?\u003C![\u0022\\\\])\u0022(?:[^\u0022\\\\]|\\\\.)*?\u0022(?!=[\u0022\\\\]))|(?\u003CCONST_PI\u003E\\b(?:Pi|\u03C0)\\b)|(?\u003CCONST_PINF\u003E(?\u003C![\\w\\)])\\\u002B(?:Inf(?:inity)?|\u221E)\\b)|(?\u003CCONST_NINF\u003E(?\u003C![\\w\\)])\\-(?:Inf(?:inity)?|\u221E)\\b)|(?\u003CCONST_NAN\u003E\\bNaN\\b)|(?\u003CCONST_E\u003E\\be\\b)|(?\u003CCONST_TRUE\u003E\\btrue\\b)|(?\u003CCONST_FALSE\u003E\\bfalse\\b)|(?\u003CFN_ABS\u003E\\babs\\()|(?\u003CFN_SIN\u003E\\bsin\\()|(?\u003CFN_ASIN\u003E\\basin\\()|(?\u003CFN_COS\u003E\\bcos\\()|(?\u003CFN_ACOS\u003E\\bacos\\()|(?\u003CFN_TAN\u003E\\btan\\()|(?\u003CFN_ATAN\u003E\\batan\\()|(?\u003CFN_ATAN2\u003E\\batan2\\()|(?\u003CFN_POW\u003E\\bpow\\()|(?\u003CFN_SQRT\u003E\\bsqrt\\()|(?\u003CFN_EXP\u003E\\bexp\\()|(?\u003CFN_LOG\u003E\\blog\\()|(?\u003CFN_LOG10\u003E\\blog10\\()|(?\u003CFN_ROUND\u003E\\bround\\()|(?\u003CFN_FLOOR\u003E\\bfloor\\()|(?\u003CFN_CEILING\u003E\\bceil\\()|(?\u003CFN_TRUNC\u003E\\btrunc\\()|(?\u003CFN_FRAC\u003E\\bfrac\\()|(?\u003CFN_COUNT\u003E\\bcount\\()|(?\u003CFN_IS_INF\u003E\\bisInf\\()|(?\u003CFN_IS_NAN\u003E\\bisNaN\\()|(?\u003CFN_TO_TXT\u003E\\btxt\\()|(?\u003CFN_TO_NUM\u003E\\bnum\\()|(?\u003CFN_TO_BOOL\u003E\\bbool\\()|(?\u003CFN_TO_TYPE_STR\u003E\\btype\\()|(?\u003CFN_TO_VER\u003E\\bv\\()|(?\u003COPEN_BRACE\u003E\\()|(?\u003CCOMMA\u003E,)|(?\u003CCLOSE_BRACE\u003E\\))|(?\u003CADD\u003E\\\u002B)|(?\u003CSUB\u003E\\-|\u2212)|(?\u003CMUL\u003E\\*|\u2219|\u00D7)|(?\u003CDIV\u003E\\/|\u00F7|\u2236|\u2215)|(?\u003CMOD\u003E%)|(?\u003CPOW\u003E\\^)|(?\u003CLTE\u003E\u003C=|\u2264)|(?\u003CGTE\u003E\u003E=|\u2265)|(?\u003CGT\u003E\u003E(?!=))|(?\u003CLT\u003E\u003C(?!=))|(?\u003CIS_NOT\u003E\\bis\\s\u002Bnot\\b)|(?\u003CIS\u003E\\bis\\b)|(?\u003CAND_NOT\u003E\\band\\s\u002Bnot\\b)|(?\u003CAND\u003E\\band\\b)|(?\u003COR_NOT\u003E\\bor\\s\u002Bnot\\b)|(?\u003COR\u003E\\bor\\b)|(?\u003CCONCAT\u003E(?\u003C!\\.)\\.\\.(?!\\.))|(?\u003CCONTAINS\u003E\\bcontains\\b)|(?\u003CSTARTS\u003E\\bstarts\\b)|(?\u003CENDS\u003E\\bends\\b)|(?\u003CREGEX_MATCH\u003E\\bmatches\\b)|(?\u003CREGEX_REPLACE\u003E\\breplace\\b)|(?\u003CREGEX_REPLACE_WITH\u003E\\bwith\\b)|(?\u003CREPEAT\u003E\\brepeat\\b)|(?\u003CVERION_IN_RANGE\u003E\\bin\\s\u002Bversions\\b)|(?\u003CSYMBOL_PATH\u003E(?:(?\u003C!\\.)\\b[A-Za-z_][A-Za-z0-9_]*\\b)(?:\\[[^\\]]\u002B\\])?(?:(?\u003C!\\.)\\.\\b[A-Za-z_][A-Za-z0-9_]*(?:\\[[^\\]]\u002B\\])?)*\\b(?!\\())|(?\u003CSPACE\u003E\\s\u002B))\u002B$",
  "title": "An expression.",
  "description": "See https://github.com/DW2MC/DW2ModLoader/wiki/Expression-language-syntax-reference",
  "$defs": {
    "list-selection": {
      "title": "A list selection expression.",
      "description": "See https://github.com/DW2MC/DW2ModLoader/wiki/Expression-language-syntax-reference",
      "propertyNames": {
        "pattern": "^(?:0|[1-9][0-9]*|\\((?:(?\u003CNUMBER\u003E(?\u003C![\\w\\)])[-\u002B]?[0-9]*\\.?[0-9]\u002B(?:e[-\u002B]?[0-9]\u002B)?)|(?\u003CSTRING\u003E(?\u003C![\u0022\\\\])\u0022(?:[^\u0022\\\\]|\\\\.)*?\u0022(?!=[\u0022\\\\]))|(?\u003CCONST_PI\u003E\\b(?:Pi|\u03C0)\\b)|(?\u003CCONST_PINF\u003E(?\u003C![\\w\\)])\\\u002B(?:Inf(?:inity)?|\u221E)\\b)|(?\u003CCONST_NINF\u003E(?\u003C![\\w\\)])\\-(?:Inf(?:inity)?|\u221E)\\b)|(?\u003CCONST_NAN\u003E\\bNaN\\b)|(?\u003CCONST_E\u003E\\be\\b)|(?\u003CCONST_TRUE\u003E\\btrue\\b)|(?\u003CCONST_FALSE\u003E\\bfalse\\b)|(?\u003CFN_ABS\u003E\\babs\\()|(?\u003CFN_SIN\u003E\\bsin\\()|(?\u003CFN_ASIN\u003E\\basin\\()|(?\u003CFN_COS\u003E\\bcos\\()|(?\u003CFN_ACOS\u003E\\bacos\\()|(?\u003CFN_TAN\u003E\\btan\\()|(?\u003CFN_ATAN\u003E\\batan\\()|(?\u003CFN_ATAN2\u003E\\batan2\\()|(?\u003CFN_POW\u003E\\bpow\\()|(?\u003CFN_SQRT\u003E\\bsqrt\\()|(?\u003CFN_EXP\u003E\\bexp\\()|(?\u003CFN_LOG\u003E\\blog\\()|(?\u003CFN_LOG10\u003E\\blog10\\()|(?\u003CFN_ROUND\u003E\\bround\\()|(?\u003CFN_FLOOR\u003E\\bfloor\\()|(?\u003CFN_CEILING\u003E\\bceil\\()|(?\u003CFN_TRUNC\u003E\\btrunc\\()|(?\u003CFN_FRAC\u003E\\bfrac\\()|(?\u003CFN_COUNT\u003E\\bcount\\()|(?\u003CFN_IS_INF\u003E\\bisInf\\()|(?\u003CFN_IS_NAN\u003E\\bisNaN\\()|(?\u003CFN_TO_TXT\u003E\\btxt\\()|(?\u003CFN_TO_NUM\u003E\\bnum\\()|(?\u003CFN_TO_BOOL\u003E\\bbool\\()|(?\u003CFN_TO_TYPE_STR\u003E\\btype\\()|(?\u003CFN_TO_VER\u003E\\bv\\()|(?\u003COPEN_BRACE\u003E\\()|(?\u003CCOMMA\u003E,)|(?\u003CCLOSE_BRACE\u003E\\))|(?\u003CADD\u003E\\\u002B)|(?\u003CSUB\u003E\\-|\u2212)|(?\u003CMUL\u003E\\*|\u2219|\u00D7)|(?\u003CDIV\u003E\\/|\u00F7|\u2236|\u2215)|(?\u003CMOD\u003E%)|(?\u003CPOW\u003E\\^)|(?\u003CLTE\u003E\u003C=|\u2264)|(?\u003CGTE\u003E\u003E=|\u2265)|(?\u003CGT\u003E\u003E(?!=))|(?\u003CLT\u003E\u003C(?!=))|(?\u003CIS_NOT\u003E\\bis\\s\u002Bnot\\b)|(?\u003CIS\u003E\\bis\\b)|(?\u003CAND_NOT\u003E\\band\\s\u002Bnot\\b)|(?\u003CAND\u003E\\band\\b)|(?\u003COR_NOT\u003E\\bor\\s\u002Bnot\\b)|(?\u003COR\u003E\\bor\\b)|(?\u003CCONCAT\u003E(?\u003C!\\.)\\.\\.(?!\\.))|(?\u003CCONTAINS\u003E\\bcontains\\b)|(?\u003CSTARTS\u003E\\bstarts\\b)|(?\u003CENDS\u003E\\bends\\b)|(?\u003CREGEX_MATCH\u003E\\bmatches\\b)|(?\u003CREGEX_REPLACE\u003E\\breplace\\b)|(?\u003CREGEX_REPLACE_WITH\u003E\\bwith\\b)|(?\u003CREPEAT\u003E\\brepeat\\b)|(?\u003CVERION_IN_RANGE\u003E\\bin\\s\u002Bversions\\b)|(?\u003CSYMBOL_PATH\u003E(?:(?\u003C!\\.)\\b[A-Za-z_][A-Za-z0-9_]*\\b)(?:\\[[^\\]]\u002B\\])?(?:(?\u003C!\\.)\\.\\b[A-Za-z_][A-Za-z0-9_]*(?:\\[[^\\]]\u002B\\])?)*\\b(?!\\())|(?\u003CSPACE\u003E\\s\u002B))\u002B\\))$"
      }
    }
  }
}